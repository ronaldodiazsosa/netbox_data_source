{% filter trim | remove_extra_newlines %}

{# Base Configuration #}
{% for line in configs_base %}
{{ line }}
{% endfor %}


{# Services Configuration #}

{% for service in ("ipam.Service", {"tags": 8}) | get_extra_data %}

{% if 53 in service.ports %}
{% for ip in service.ipaddresses.all() %}
set system name-server {{ (ip.address | string).split('/')[0] }} routing-instance mgmt
{% endfor %}
{% endif %}

{% if 49 in service.ports %}
{% for ip in service.ipaddresses.all() %}
set system tacplus-server {{ (ip.address | string).split('/')[0] }} routing-instance mgmt_junos
set system tacplus-server {{ (ip.address | string).split('/')[0] }} port 49
set system tacplus-server {{ (ip.address | string).split('/')[0] }} secret "$9$UwHPQ/Cu01hqmORSlW8XxNdVs4aGUi.vWLNVbaJjHq"
set system tacplus-server {{ (ip.address | string).split('/')[0] }} source-address {{ (device.primary_ip.address | string).split('/')[0] }}
{% endfor %}
{% endif %}

{% if 514 in service.ports %}
{% for ip in service.ipaddresses.all() %}
set system syslog user * any emergency
set system syslog host {{ (ip.address | string).split('/')[0] }} any warning
set system syslog host {{ (ip.address | string).split('/')[0] }} daemon notice
set system syslog host {{ (ip.address | string).split('/')[0] }} change-log info
set system syslog host {{ (ip.address | string).split('/')[0] }} interactive-commands notice
set system syslog host {{ (ip.address | string).split('/')[0] }} match "!(.*DAEMON-5-UI_OPEN_TIMEOUT.*|.*AUTH-3: error: Received disconnect.*|.*DAEMON-4.*sshd.*255.*)"
set system syslog host {{ (ip.address | string).split('/')[0] }} facility-override local0
set system syslog host {{ (ip.address | string).split('/')[0] }} log-prefix {{ device.name }}
set system syslog host {{ (ip.address | string).split('/')[0] }} source-address {{ (device.primary_ip.address | string).split('/')[0] }}
set system syslog host {{ (ip.address | string).split('/')[0] }} routing-instance mgmt_junos
set system syslog host {{ (ip.address | string).split('/')[0] }} explicit-priority
set system syslog file interactive-commands interactive-commands any
set system syslog file messages any notice
set system syslog file messages authorization info
set system syslog time-format year
set system syslog time-format millisecond
{% endfor %}
{% endif %}

{% endfor %}




{# configuring interfaces #}

{% for interface in device.interfaces.all() %}
{# configuring physical interfaces  #}
{% if not interface.parent and interface.type.value != "virtual"  %}

{# configure physical interface description #}
{% if interface.description %}
set interfaces {{ interface.name }} description "{{ interface.description }}"
{% endif %}

{# disable interface if not enabled #}
{% if not interface.enabled %}
set interfaces {{ interface.name }} disable
{% endif -%}

{# configure physical interface gigether_options #}
{% if interface.lag %}
set interfaces {{ interface.name }} gigether-options 802.3ad {{ interface.lag.name }}
{% endif %}

{# configure lag interface #}
{% if interface.type.value == "lag" %}
set interfaces {{ interface.name }} aggregated-ether-options lacp active
{% endif %}

{# Speed configuration: convert Kbps to Gbps #}
{% if interface.speed %}
{% set speed_g = interface.speed // 1000000 %}
{% if ':' in interface.name %}
set interfaces {{ interface.name }} gigether-options auto-negotiation
set interfaces {{ interface.name }} gigether-options speed {{ speed_g }}g
{% elif 'ae' in interface.name %}
set interfaces {{ interface.name }} aggregated-ether-options link-speed {{ speed_g }}g
{% else %}
set interfaces {{ interface.name }} speed {{ speed_g }}g
{% endif %}
{% endif %}

{# mtu configuration}
{% if interface.mtu %}
set interfaces {{ interface.name }} mtu {{ interface.mtu }}
{%   endif %}

{# configure physical interface flexible vlan tagging #}
{%   if interface.mode.value == "tagged" %}
set interfaces {{ interface.name }} flexible-vlan-tagging
set interfaces {{ interface.name }} encapsulation flexible-ethernet-services
{%   endif %}

{% set traceoptions_tag = interface.tags.all() | selectattr('name', 'equalto', 'Traceoptions') | list | length > 0 %}
{%   if traceoptions_tag %}
set interfaces {{ interface.name }} traceoptions flag all
{%  endif %}

{% set sampling_ipv4 = interface.tags.all() | selectattr('name', 'equalto', 'sampling_ipv4') | list | length > 0 %}
{%   if sampling_ipv4 %}
set interfaces {{interface.name }} family inet sampling input
{%  endif %}
{% set sampling_ipv6 = interface.tags.all() | selectattr('name', 'equalto', 'sampling_ipv6') | list | length > 0 %}
{%   if sampling_ipv6 %}
set interfaces {{interface.name }} family inet6 sampling input
{%  endif %}
{% set mpls_tag = interface.tags.all() | selectattr('name', 'equalto', 'MPLS') | list | length > 0 %}
{%   if mpls_tag %}
set interfaces {{interface.name }} family mpls
{%  endif %}
{% endif %}

{# configure virtual interfaces #}
{% if interface.parent or interface.type.value == "virtual" %}
{% set interface_unit_list = interface.name.split('.') %}


{# configure logical interface description #}
{% if interface.description %}
set interfaces {{ interface.name }} description "{{ interface.description }}"
{% endif %}
{# disable interface if not enabled #}
{% if not interface.enabled %}
set interfaces {{ interface.name }} disable
{% endif -%}

{# configure vlan id #}
{% if interface_unit_list[1] != '0' and interface.type.value != "virtual" %}
set interfaces {{interface.name }} vlan-id {{ interface_unit_list[1] }}
{%     endif %}

{# configure mtu id #}
{% if interface.mtu %}
set interfaces {{ interface.name }} mtu {{ interface.mtu }}
{%   endif %}

{# Configure ip addresses #}
{% for ip_address in interface.ip_addresses.all() %}
{% if ip_address.family == 4 %}
{% if ip_address.is_primary_ip %}
set interfaces {{ interface.name }} family inet address {{ ip_address.address }} primary
{% else %}
set interfaces {{ interface.name }} family inet address {{ ip_address.address }}
{% endif %}

{% elif ip_address.family == 6 %}
set interfaces {{ interface.name }} family inet6 address {{ ip_address.address }}
{% endif %}

{% endfor %}

{# configure interface mpls family protocols #}

{% set mpls_tag = interface.tags.all() | selectattr('name', 'equalto', 'MPLS') | list | length > 0 %}
{%   if mpls_tag %}
set interfaces {{interface.name }} family mpls
{%  endif %}


{% set sampling_ipv4 = interface.tags.all() | selectattr('name', 'equalto', 'sampling_ipv4') | list | length > 0 %}
{%   if sampling_ipv4 %}
set interfaces {{interface.name }} family inet sampling input
{%  endif %}
{% set sampling_ipv6 = interface.tags.all() | selectattr('name', 'equalto', 'sampling_ipv6') | list | length > 0 %}
{%   if sampling_ipv6 %}
set interfaces {{interface.name }} family inet6 sampling input
{%  endif %}

{# configure extra attributes #}
{% set corero_tag = interface.tags.all() | selectattr('name', 'equalto', 'Corero') | list | length > 0 %}
{%   if corero_tag %}
set interfaces {{interface.name }} unit 0 family inet filter input CORERO-MITIGATE
{%  endif %}


{% endif %}
{% endfor %}

{% for policy in base_policy %}
{{ policy }}
{% endfor %}


{# configuring ospf #}

set protocols ospf reference-bandwidth 10g
set protocols ospf traffic-engineering ignore-lsp-metrics
{% for interface in device.interfaces.all() %}
{% if interface.custom_field_data['protocols'] and 'ospf' in interface.custom_field_data['protocols'] %}
{% for key, ospf_parameter in interface.custom_field_data['ospf_parameters'].items() %}

{% if key == 'passive' and ospf_parameter %}
set protocols ospf area 0.0.0.0 interface {{ interface.name }} passive
{% endif %}

{% if key == 'link_protection' and ospf_parameter %}
set protocols ospf area 0.0.0.0 interface {{ interface.name }} link-protection
{% endif %}

{% if key == 'metric' %}
set protocols ospf area 0.0.0.0 interface {{ interface.name }} metric {{ ospf_parameter }}
{% endif %}

{% if key == 'bfd_liveness_detection' %}
set protocols ospf area 0.0.0.0 interface {{ interface.name }} bfd-liveness-detection minimum-interval {{ ospf_parameter.multiplier }}
set protocols ospf area 0.0.0.0 interface {{ interface.name }} bfd-liveness-detection multiplier {{ ospf_parameter.minimum_interval }}
{% endif %}

{% if key == 'interface_type' %}
set protocols ospf area 0.0.0.0 interface {{ interface.name }} interface-type {{ ospf_parameter }}
{% endif %}

{% endfor %}
{% endif %}
{% endfor %}

{# Configure BGP #}
set protocols bgp log-updown
set protocols bgp bgp-error-tolerance


{% for bgp_session in ("netbox_bgp.BGPSession", {"device": device.id }) | get_extra_data %}

{# configure neighbor description #}

{% if bgp_session.description %}
set protocols bgp group {{ bgp_session.peer_group.name }} neighbor {{ (bgp_session.remote_address.address | string).split('/')[0] }} description "{{ bgp_session.description }}"
{% endif %}


{# configure neighbor export and import  #}

{% if bgp_session.export_policies %}
{% for export_policy in bgp_session.export_policies.all() %}
set protocols bgp group {{ bgp_session.peer_group.name }} neighbor {{ (bgp_session.remote_address.address | string).split('/')[0] }} export {{ export_policy.name }}
{% endfor %}
{% endif %}

{% if bgp_session.import_policies %}
{% for import_policy in bgp_session.import_policies.all() %}
set protocols bgp group {{ bgp_session.peer_group.name }} neighbor {{ (bgp_session.remote_address.address | string).split('/')[0] }} import {{ import_policy.name }}
{% endfor %}
{% endif %}

{# configure group paramaters #}

{# configure export policies #}
{% if bgp_session.peer_group.export_policies %}
{% for policy in bgp_session.peer_group.export_policies.all() %}
set protocols bgp group {{ bgp_session.peer_group.name }} export {{ policy.name }}
{% endfor %} 
{% endif %}

{# configure import policies #}
{% if bgp_session.peer_group.import_policies %}
{% for policy in bgp_session.peer_group.import_policies.all() %}
set protocols bgp group {{ bgp_session.peer_group.name }} import {{ policy.name }}
{% endfor %} 
{% endif %}


{# configure custom group paramaters #}

{% for key, bgp_parameter in bgp_session.peer_group.custom_field_data['bgp_group_parameters'].items() %}

{% if key == 'type' %}
set protocols bgp group {{ bgp_session.peer_group.name }} type {{ bgp_parameter }}
{% endif %}

{% if key == 'description' %}  
set protocols bgp group {{ bgp_session.peer_group.name }} description "{{ bgp_parameter }}"
{% endif %}

{% if key == 'mtu_discovery' %}
set protocols bgp group {{ bgp_session.peer_group.name }} mtu-discovery
{% endif %}

{% if key == 'family' %}
{% for family_item in bgp_parameter %}

set protocols bgp group {{ bgp_session.peer_group.name }} family {{ family_item.type }}
{% if family_item.parameters is defined %}
{% for parameter in family_item.parameters %}
set protocols bgp group {{ bgp_session.peer_group.name }} family {{ family_item.type }} {{ parameter }}
{% endfor %}
{% endif %}

{% endfor %}
{% endif %}


{% endfor %}
{% endfor %}
{% endfilter %}